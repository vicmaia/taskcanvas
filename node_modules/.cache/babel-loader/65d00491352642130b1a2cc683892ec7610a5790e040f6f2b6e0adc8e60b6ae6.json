{"ast":null,"code":"var _jsxFileName = \"/Users/cn369515/Desktop/taskcanvas/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:4000/tasks\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState({\n    todo: [],\n    doing: [],\n    done: []\n  });\n  const [newTaskText, setNewTaskText] = useState(\"\");\n  useEffect(() => {\n    axios.get(API_URL).then(res => {\n      const grouped = {\n        todo: [],\n        doing: [],\n        done: []\n      };\n      res.data.forEach(task => {\n        grouped[task.status].push(task);\n      });\n      setTasks(grouped);\n    });\n  }, []);\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const sourceList = Array.from(tasks[source.droppableId]);\n    const [movedItem] = sourceList.splice(source.index, 1);\n    const destList = Array.from(tasks[destination.droppableId]);\n    movedItem.status = destination.droppableId;\n    destList.splice(destination.index, 0, movedItem);\n\n    // Atualiza no frontend\n    setTasks({\n      ...tasks,\n      [source.droppableId]: sourceList,\n      [destination.droppableId]: destList\n    });\n\n    // Atualiza no backend\n    axios.patch(`http://localhost:4000/tasks/${movedItem.id}`, {\n      status: movedItem.status\n    });\n  };\n  const addTask = () => {\n    if (!newTaskText.trim()) return;\n    axios.post(API_URL, {\n      text: newTaskText.trim(),\n      status: \"todo\"\n    }).then(res => {\n      setTasks(prev => ({\n        ...prev,\n        todo: [...prev.todo, res.data]\n      }));\n      setNewTaskText(\"\");\n    });\n  };\n  const deleteTask = (taskId, status) => {\n    axios.delete(`http://localhost:4000/tasks/${taskId}`).then(() => {\n      setTasks(prev => ({\n        ...prev,\n        [status]: prev[status].filter(t => t.id !== taskId)\n      }));\n    });\n  };\n  const columns = [{\n    id: \"todo\",\n    title: \"To Do\"\n  }, {\n    id: \"doing\",\n    title: \"Doing\"\n  }, {\n    id: \"done\",\n    title: \"Done\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TaskCanvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nova tarefa\",\n        value: newTaskText,\n        onChange: e => setNewTaskText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Adicionar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: columns.map(column => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: column.id,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: column.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), tasks[column.id].map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: task.id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task\",\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: task.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 25\n              }, this)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)\n        }, column.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4k7Y5m1Bw9MwltkZ5i0pj+0JinA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","API_URL","App","_s","tasks","setTasks","todo","doing","done","newTaskText","setNewTaskText","get","then","res","grouped","data","forEach","task","status","push","onDragEnd","result","source","destination","sourceList","Array","from","droppableId","movedItem","splice","index","destList","patch","id","addTask","trim","post","text","prev","deleteTask","taskId","delete","filter","t","columns","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","column","provided","ref","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","_c","$RefreshReg$"],"sources":["/Users/cn369515/Desktop/taskcanvas/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nconst API_URL = \"http://localhost:4000/tasks\";\n\nfunction App() {\n  const [tasks, setTasks] = useState({ todo: [], doing: [], done: [] });\n  const [newTaskText, setNewTaskText] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(API_URL).then((res) => {\n      const grouped = { todo: [], doing: [], done: [] };\n      res.data.forEach((task) => {\n        grouped[task.status].push(task);\n      });\n      setTasks(grouped);\n    });\n  }, []);\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) return;\n\n    const sourceList = Array.from(tasks[source.droppableId]);\n    const [movedItem] = sourceList.splice(source.index, 1);\n    const destList = Array.from(tasks[destination.droppableId]);\n    movedItem.status = destination.droppableId;\n    destList.splice(destination.index, 0, movedItem);\n\n    // Atualiza no frontend\n    setTasks({\n      ...tasks,\n      [source.droppableId]: sourceList,\n      [destination.droppableId]: destList\n    });\n\n    // Atualiza no backend\n    axios.patch(`http://localhost:4000/tasks/${movedItem.id}`, {\n      status: movedItem.status\n    });\n  };\n\n\n  const addTask = () => {\n    if (!newTaskText.trim()) return;\n    axios\n      .post(API_URL, {\n        text: newTaskText.trim(),\n        status: \"todo\"\n      })\n      .then((res) => {\n        setTasks((prev) => ({\n          ...prev,\n          todo: [...prev.todo, res.data]\n        }));\n        setNewTaskText(\"\");\n      });\n  };\n\n  const deleteTask = (taskId, status) => {\n    axios.delete(`http://localhost:4000/tasks/${taskId}`).then(() => {\n        setTasks((prev) => ({\n          ...prev,\n          [status]: prev[status].filter((t) => t.id !== taskId)\n        }));\n      });\n    };\n\n\n  const columns = [\n    { id: \"todo\", title: \"To Do\" },\n    { id: \"doing\", title: \"Doing\" },\n    { id: \"done\", title: \"Done\" }\n  ];\n\n  return (\n    <div className=\"App\">\n      <h1>TaskCanvas</h1>\n\n      <div className=\"add-task\">\n        <input\n          type=\"text\"\n          placeholder=\"Nova tarefa\"\n          value={newTaskText}\n          onChange={(e) => setNewTaskText(e.target.value)}\n        />\n        <button onClick={addTask}>Adicionar</button>\n      </div>\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div className=\"board\">\n          {columns.map((column) => (\n            <Droppable droppableId={column.id} key={column.id}>\n              {(provided) => (\n                <div\n                  className=\"column\"\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  <h2>{column.title}</h2>\n                  {tasks[column.id].map((task, index) => (\n                    <Draggable draggableId={task.id} index={index} key={task.id}>\n                      {(provided) => (\n                        <div\n                          className=\"task\"\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          {task.text}\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}